package DroidGame.BattleTypes;

import DroidGame.Droids.DroidData;

import java.io.FileWriter;
import java.io.IOException;
import java.util.List;
import java.util.ArrayList;
import java.util.Formatter;

public class TeamBattle {

    private static List<DroidData> yourTeam;
    private static List<DroidData> enemyTeam;
    private static int yourTeamHealth;
    private static int enemyTeamHealth;

    public static void battle(DroidData tank, DroidData hunter) {
        createTeams(tank, hunter);
        printTeams();
        attack();
        System.out.println(resultOfBattle());
    }

    public static void createTeams(DroidData tank, DroidData hunter) {
        System.out.println("Size of team will be generated by random");
        int sizeOfteam = 2 + (int) (Math.random() * 5);
        System.out.println("Both of teams will be generated by random");
        yourTeam = new ArrayList<>(sizeOfteam);
        enemyTeam = new ArrayList<>(sizeOfteam);
        for (int n = 0; n < sizeOfteam; n++) {
            int chooseOfteam = 1 + (int) (Math.random() * 2);
            switch (chooseOfteam) {
                case 1:
                    yourTeam.add(tank);
                    yourTeamHealth += tank.getHealth();
                    break;
                case 2:
                    yourTeam.add(hunter);
                    yourTeamHealth += hunter.getHealth();
                    break;
            }
            chooseOfteam = 1 + (int) (Math.random() * 2);
            switch (chooseOfteam) {
                case 1:
                    enemyTeam.add(tank);
                    enemyTeamHealth += tank.getHealth();
                    break;
                case 2:
                    enemyTeam.add(hunter);
                    enemyTeamHealth += hunter.getHealth();
                    break;
            }
        }
    }

    public static void attack() {
        getDamage();
    }

    public static void getDamage() {
        DroidData object, object2;
        int roundNumber = 1;
        boolean checkFile = false;
        while (yourTeamHealth > 0 && enemyTeamHealth > 0) {
            System.out.println("\t\t\t\tRound " + roundNumber);
            int robotChoose = 1 + (int) (Math.random() * (yourTeam.size() - 1));
            object = enemyTeam.get(robotChoose);
            yourTeamHealth -= object.getDamage();
            checkHealth();
            object2 = yourTeam.get(robotChoose);
            enemyTeamHealth -= object2.getDamage();
            checkHealth();
            checkFile = saveFile(object, object2, roundNumber, checkFile);
            printCharacteristics(object, object2);
            roundNumber++;
        }
    }

    public static String resultOfBattle() {
        String resultOfBattle = "";
        if (yourTeamHealth == 0 && enemyTeamHealth == 0) {
            resultOfBattle = "draw";
        } else {
            if (yourTeamHealth <= 0) {
                resultOfBattle = "\t\t\t\tYOU LOST";
            } else if (enemyTeamHealth == 0) {
                resultOfBattle = "\t\t\t\tYOU WON";
            }
        }
        return resultOfBattle;
    }

    public static void checkHealth() {
        if (yourTeamHealth < 0)
            yourTeamHealth = 0;
        if (enemyTeamHealth < 0)
            enemyTeamHealth = 0;
    }

    public static boolean saveFile(DroidData object, DroidData object2, int roundNumber, boolean checkFile) {
        try (FileWriter writer = new FileWriter("TeamBattle.txt", true)) {
            if (!checkFile) {
                new Formatter("TeamBattle.txt").format("");
                checkFile = true;
            }
            writer.write("\t\t\t\tRound " + roundNumber + "\n");
            writer.write("Your team health : " + yourTeamHealth + " Get damage : " + object.getDamage());
            writer.write("\nEnemy team health : " + enemyTeamHealth + " Get damage : " + object2.getDamage() + "\n");
            writer.write(resultOfBattle());
            writer.flush();
        } catch (IOException ex) {
            System.out.println(ex.getMessage());
        }
        return checkFile;
    }

    public static void printCharacteristics(DroidData object, DroidData object2) {
        System.out.println("Your team health : " + yourTeamHealth + " Get damage : " + object.getDamage());
        System.out.println("Enemy team health : " + enemyTeamHealth + " Get damage : " + object2.getDamage());
    }

    public static void printTeams() {
        System.out.println("\t\t\t\tYour team :");
        for (DroidData i : yourTeam) {
            System.out.println(i.printRobot());
        }
        System.out.println("\t\t\t\tEnemy team :");
        for (DroidData i : enemyTeam) {
            System.out.println(i.printRobot());
        }
    }

}
